[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/images/HUD/time.png" type="Texture" id=1]
[ext_resource path="res://assets/characters/player/HUD.gd" type="Script" id=3]

[sub_resource type="GDScript" id=3]
script/source = "extends KinematicBody

# Параметры движения
export(float) var Speed = 10.0
export(float) var SpeedIndex = 1
export(float) var JumpSpeed = 10.0
export(float) var Gravity = -9.8
export(float) var Sensitivity = 0.7

onready var Head = $Head

var Velocity = Vector3()
var IsOnGround = false


func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func _input(Event):
	if Event is InputEventMouseMotion:
		rotate_y( deg2rad( -Event.relative.x * Sensitivity / 7 ))
		Head.rotate_x( deg2rad( -Event.relative.y * Sensitivity / 7 ))
		Head.rotation.x = clamp( Head.rotation.x, deg2rad(-90), deg2rad(90) )


func _process(delta):
	if Input.is_action_just_pressed(\"ui_cancel\"):
		get_tree().quit()


func _physics_process(delta):
	# Получаем ввод от клавиатуры
	var MoveDirection = Vector3()

	if Input.is_action_pressed(\"MoveForward\"):
		MoveDirection.z -= 1
	if Input.is_action_pressed(\"MoveBackward\"):
		MoveDirection.z += 1
	if Input.is_action_pressed(\"MoveLeft\"):
		MoveDirection.x -= 1
	if Input.is_action_pressed(\"MoveRight\"):
		MoveDirection.x += 1

	# Нормализуем вектор движения и умножаем на скорость
	MoveDirection = MoveDirection.normalized() * Speed * SpeedIndex

	# Проверяем, находится ли персонаж на земле
	IsOnGround = is_on_floor()

	# Применяем гравитацию
	if not IsOnGround:
		Velocity.y += (Gravity * 4) * delta
		if MoveDirection.z > 0:
			MoveDirection.z *= 1.5
		if (MoveDirection.x < 0 or MoveDirection.x > 0) and MoveDirection.z < 0:
			MoveDirection.x *= 0.5

	# Прыжок
	if IsOnGround and Input.is_action_pressed(\"MoveJump\"):
		Velocity.y = JumpSpeed
		if Input.is_action_pressed(\"MoveForward\"):
			SpeedIndex *= 1.015
	else:
		if not Input.is_action_pressed(\"MoveJump\"):
			SpeedIndex = 1


	# Преобразуем локальное движение в глобальное
	MoveDirection = global_transform.basis.xform(MoveDirection)

	# Применяем движение
	Velocity.x = MoveDirection.x
	Velocity.z = MoveDirection.z

	# Применяем перемещение
	Velocity = move_and_slide(Velocity, Vector3.UP)
"

[sub_resource type="CapsuleMesh" id=4]
radius = 0.7
mid_height = 1.872

[sub_resource type="CapsuleShape" id=5]
radius = 0.7
height = 1.87164

[node name="Player" type="KinematicBody"]
script = SubResource( 3 )

[node name="Head" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.34539, 0 )

[node name="Camera" type="Camera" parent="Head"]
current = true
fov = 80.0
near = 0.01

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
mesh = SubResource( 4 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0 )
shape = SubResource( 5 )

[node name="HUD" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
script = ExtResource( 3 )

[node name="CenterContainer" type="CenterContainer" parent="HUD"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": true
}

[node name="Time" type="Control" parent="HUD"]
margin_left = 112.0
margin_top = 64.0
margin_right = 112.0
margin_bottom = 64.0
rect_rotation = -179.5
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="HUD/Time"]
rotation = -1.5708
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )
centered = false
offset = Vector2( -1, 0 )

[node name="DayOrNight" type="Label" parent="HUD"]
margin_top = 96.0
margin_right = 40.0
margin_bottom = 110.0

[node name="Text" type="Label" parent="HUD"]
margin_right = 40.0
margin_bottom = 14.0
text = "FPS: "

[node name="Fps" type="Label" parent="HUD/Text"]
margin_left = 32.0
margin_right = 72.0
margin_bottom = 14.0
